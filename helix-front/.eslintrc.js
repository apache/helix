/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  overrides: [
    {
      env: {
        browser: true,
        node: true,
      },
      extends: [
        'prettier',
        'plugin:@angular-eslint/recommended',
        // This is required if you use inline templates in Components
        'plugin:@angular-eslint/template/process-inline-templates',
      ],
      files: ['*.ts'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: [
          'tsconfig.json',
          'client/tsconfig.app.json',
          'client/tsconfig.spec.json',
          'e2e/tsconfig.json',
        ],
        tsconfigRootDir: __dirname,
        sourceType: 'module',
        createDefaultProgram: true,
      },
      plugins: [
        '@angular-eslint/eslint-plugin',
        '@typescript-eslint',
        '@typescript-eslint/tslint',
      ],
      rules: {
        '@angular-eslint/component-class-suffix': 'error',
        '@angular-eslint/component-selector': [
          'error',
          {
            type: 'element',
            prefix: 'hi',
            style: 'kebab-case',
          },
        ],
        '@angular-eslint/directive-class-suffix': 'error',
        '@angular-eslint/directive-selector': [
          'warn',
          {
            type: 'attribute',
            prefix: 'hi',
            style: 'camelCase',
          },
        ],
        '@angular-eslint/no-empty-lifecycle-method': 'warn',
        '@angular-eslint/no-input-rename': 'error',
        '@angular-eslint/no-output-native': 'warn',
        '@angular-eslint/no-output-rename': 'warn',
        '@angular-eslint/use-pipe-transform-interface': 'error',
        '@typescript-eslint/consistent-type-definitions': 'error',
        '@typescript-eslint/dot-notation': 'off',
        '@typescript-eslint/explicit-member-accessibility': [
          'off',
          {
            accessibility: 'explicit',
          },
        ],
        '@typescript-eslint/member-delimiter-style': [
          'off',
          {
            multiline: {
              delimiter: 'none',
              requireLast: true,
            },
            singleline: {
              delimiter: 'semi',
              requireLast: false,
            },
          },
        ],
        '@typescript-eslint/member-ordering': 'warn',
        '@typescript-eslint/naming-convention': 'warn',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-empty-interface': 'error',
        '@typescript-eslint/no-inferrable-types': [
          'warn',
          {
            ignoreParameters: true,
          },
        ],
        '@typescript-eslint/no-shadow': [
          'warn',
          {
            hoist: 'all',
          },
        ],
        '@typescript-eslint/no-unused-expressions': 'warn',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/semi': ['off', null],
        '@typescript-eslint/type-annotation-spacing': 'warn',
        '@typescript-eslint/unified-signatures': 'error',
        'brace-style': ['warn', '1tbs'],
        curly: 'error',
        'dot-notation': 'off',
        'eol-last': 'error',
        eqeqeq: ['warn', 'smart'],
        'guard-for-in': 'warn',
        'id-denylist': 'off',
        'id-match': 'off',
        indent: 'off',
        'max-len': [
          'warn',
          {
            code: 140,
          },
        ],
        'no-bitwise': 'error',
        'no-caller': 'error',
        'no-console': [
          'error',
          {
            allow: [
              'log',
              'warn',
              'dir',
              'timeLog',
              'assert',
              'clear',
              'count',
              'countReset',
              'group',
              'groupEnd',
              'table',
              'dirxml',
              'error',
              'groupCollapsed',
              'Console',
              'profile',
              'profileEnd',
              'timeStamp',
              'context',
            ],
          },
        ],
        'no-debugger': 'error',
        'no-empty': 'off',
        'no-empty-function': 'off',
        'no-eval': 'error',
        'no-fallthrough': 'error',
        'no-new-wrappers': 'error',
        'no-redeclare': 'error',
        'no-restricted-imports': ['warn'],
        'no-shadow': 'off', // rely on equivalent rule @typescript-eslint/no-shadow
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'warn',
        'no-underscore-dangle': 'off',
        'no-unused-expressions': 'off', // rely on equivalent rule @typescript-eslint/no-unused-expressions
        'no-unused-labels': 'error',
        'no-var': 'warn',
        'prefer-const': 'warn',
        quotes: 'off',
        radix: 'warn',
        semi: 'off',
        'spaced-comment': [
          'warn',
          'always',
          {
            markers: ['/'],
          },
        ],
        'valid-typeof': 'error',
        '@typescript-eslint/tslint/config': [
          'error',
          {
            rules: {
              'import-spacing': true,
              'invoke-injectable': true,
              'no-access-missing-member': true,
              'templates-use-public': true,
              'use-host-property-decorator': true,
              'use-input-property-decorator': true,
              'use-life-cycle-interface': true,
              'use-output-property-decorator': true,
              whitespace: [
                false,
                'check-branch',
                'check-decl',
                'check-operator',
                'check-separator',
                'check-type',
              ],
            },
          },
        ],
      },
    },
    {
      files: ['*.html'],
      extends: ['plugin:@angular-eslint/template/recommended'],
      rules: {
        /**
         * Any template/HTML related rules you wish to use/reconfigure over and above the
         * recommended set provided by the @angular-eslint project would go here.
         */
        '@angular-eslint/template/eqeqeq': 'warn',
      },
    },
  ],
}
