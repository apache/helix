syntax = "proto3";

package proto.org.apache.helix.gateway;

message SingleTransitionMessage {
  enum TransitionType {
    ADD_SHARD = 0;
    DELETE_SHARD = 1;
    CHANGE_ROLE = 2;
  }
  string transitionID = 1;    // ID of transition message
  TransitionType transitionType = 2;   // Transition type for shard operations
  string resourceID = 3;              // Resource ID
  string shardID = 4;                 // Shard to perform operation
  optional string startState = 5;      // Shard start state
  string targetState = 6;     // Shard target state.
}

message TransitionMessage{
  repeated SingleTransitionMessage request = 1;
}

message SingleResourceState {
  string resource = 1;             // name of the resource
  repeated SingleShardState shardStates = 2;    // State of each shard
}

message SingleShardState {
  string shardName = 1;       // Name of the shard
  string currentState = 2;     // Current state of the shard
}

message SingleShardTransitionStatus {
  string transitionID = 1;       // ID of transition message
  bool isSuccess = 2;           // Was transition successfully performed
  optional string currentState = 3;   // If it failed, what is the current state it should reported as.
}

message ShardTransitionStatus{
  string instanceName = 1;         // Name of the application instance
  string clusterName = 2;          // Name of the cluster to connect to
  repeated SingleShardTransitionStatus shardTransitionStatus = 3;    // state transition result for a shard
}

// Application report its state to Helix Gateway upon initial connection
message ShardState{
  string instanceName = 1;         // Name of the application instance
  string clusterName = 2;          // Name of the cluster to connect to
  repeated SingleResourceState resourceState = 3;    // State of each resource
}

// Application instance sends message upon initial connection or reply to state transition message
message ShardStateMessage{
  oneof instanceUpdate {
    ShardState shardState = 1;
    ShardTransitionStatus shardTransitionStatus = 2;
  }
}

service HelixGatewayService {
  rpc report(stream ShardStateMessage) returns (stream TransitionMessage) {}
}

